System.registerDynamic("components/home/home",["angular2/core"],!0,function(a,b,c){var d=this,e=d.define;d.define=void 0;var f=this&&this.__decorate||function(a,b,c,d){var e,f=arguments.length,g=3>f?b:null===d?d=Object.getOwnPropertyDescriptor(b,c):d;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)g=Reflect.decorate(a,b,c,d);else for(var h=a.length-1;h>=0;h--)(e=a[h])&&(g=(3>f?e(g):f>3?e(b,c,g):e(b,c))||g);return f>3&&g&&Object.defineProperty(b,c,g),g},g=this&&this.__metadata||function(a,b){return"object"==typeof Reflect&&"function"==typeof Reflect.metadata?Reflect.metadata(a,b):void 0},h=a("angular2/core"),i=function(){function a(a){this._ngZone=a,this.storage=localStorage,this.totalMinutes=0,this.totalHours=0,this.projects=[],this.timeEntries=[];var b=new Date;this.defaultDate=this.formatDate(b),this.currentYear=b.getFullYear(),this.projects=localStorage.projects?JSON.parse(localStorage.projects):[],this.timeEntries=localStorage.timeEntries?JSON.parse(localStorage.timeEntries):[],this.totalMinutes=localStorage.totalMinutes?localStorage.totalMinutes:0,this.totalHours=this.totalMinutes/60,localStorage.startDate||(localStorage.startDate=this.defaultDate),localStorage.endDate||(localStorage.endDate=this.defaultDate),localStorage.headline||(localStorage.headline="TimeSheets"),localStorage.project||(localStorage.project=""),localStorage.totalMinutes||(localStorage.totalMinutes=this.totalMinutes),localStorage.language||(localStorage.language="en")}return a.prototype.formatDateForDisplay=function(a){return("0"+a.getDate()).slice(-2)+"."+("0"+(a.getMonth()+1)).slice(-2)+"."+a.getFullYear()},a.prototype.formatDate=function(a){return a.getFullYear()+"-"+("0"+(a.getMonth()+1)).slice(-2)+"-"+("0"+a.getDate()).slice(-2)},a.prototype.login=function(){var a=this;this.mite=new Mite({account:localStorage.accountName,api_key:localStorage.apiKey}),this._ngZone.run(function(){a.mite.Project.active(function(b){var c=[];b.forEach(function(a){c.push({key:a.project.id,value:a.project.customer_name+": "+a.project.name})}),localStorage.projects=JSON.stringify(c),a.projects=JSON.parse(localStorage.projects)})})},a.prototype.displayTimes=function(){var a=this;this.mite||(this.mite=new Mite({account:localStorage.accountName,api_key:localStorage.apiKey})),this._ngZone.run(function(){a.mite.Project.find(localStorage.project,function(b){localStorage.projectName=b.project.customer_name+": "+b.project.name,localStorage.displayStartDate=a.formatDateForDisplay(new Date(localStorage.startDate)),localStorage.displayEndDate=a.formatDateForDisplay(new Date(localStorage.endDate)),localStorage.showProjectHeadline=!0}),a.mite.TimeEntry.all({project_id:localStorage.project,from:localStorage.startDate,to:localStorage.endDate},function(b){var c=[];a.totalMinutes=0,b.forEach(function(b){var d=new Date(b.time_entry.date_at),e=a.formatDateForDisplay(d);c.push({userName:b.time_entry.user_name,serviceName:b.time_entry.service_name,date:e,hours:b.time_entry.minutes/60}),a.totalMinutes+=b.time_entry.minutes}),localStorage.timeEntries=JSON.stringify(c),localStorage.totalMinutes=a.totalMinutes,a.timeEntries=JSON.parse(localStorage.timeEntries),a.totalHours=a.totalMinutes/60})})},a=f([h.Component({selector:"home",template:'\n    <div class="row">\n    	<div class="col-lg-10">\n    		<h1>{{ storage[\'headline\'] }}</h1>\n    		<h2 *ngIf="storage[\'showProjectHeadline\']">{{ storage[\'projectName\'] }}, {{ storage[\'displayStartDate\'] }} - {{ storage[\'displayEndDate\'] }}</h2>\n    		<button *ngIf="!hideForms" (click)="hideForms = true" class="btn btn-primary btn-sm">Hide forms</button>\n    		<button *ngIf="hideForms && !hideButtons" (click)="hideForms = false" class="btn btn-primary btn-sm">Show forms</button>\n    		<button *ngIf="hideForms && !hideButtons" (click)="hideButtons = true" class="btn btn-default btn-sm">Hide buttons</button>\n    	</div>\n    	<div class="col-lg-2">\n    		<br>\n    		<button (click)="storage[\'language\'] = \'en\'" class="btn btn-primary btn-sm">English</button>\n    		<button (click)="storage[\'language\'] = \'de\'" class="btn btn-primary btn-sm">German</button>\n    	</div>\n    </div>\n    <hr>\n    <div class="row" *ngIf="!hideForms">\n    	<div class="col-lg-12 well">\n    		<form role="form" (submit)="login()">\n    			<div class="form-group">\n    				<label for="accountName">Account name</label>\n    				<input type="text" class="form-control" id="accountName" placeholder="Please enter your account name." [(ngModel)]="storage[\'accountName\']">\n    			</div>\n    			<div class="form-group">\n    				<label for="apiKey">API key</label>\n    				<input type="text" class="form-control" id="apiKey" placeholder="Please enter your API key." [(ngModel)]="storage[\'apiKey\']">\n    			</div>\n    			<button type="submit" class="btn btn-default">Login</button>\n    		</form>\n    	</div>\n    </div>\n    <div class="row" *ngIf="!hideForms">\n    	<div class="col-lg-12 well">\n    		<form role="form" (submit)="displayTimes()">\n    			<div class="form-group">\n    				<label for="project">Project</label>\n    				<select id="project" class="form-control" [(ngModel)]="storage[\'project\']">\n    					<option value="" selected>Please select a project.</option>\n    					<option *ngFor="#project of projects" value="{{ project.key }}">{{ project.value }}</option>\n    				</select>\n    			</div>\n    			<div class="form-group">\n    				<label for="startDate">Begin</label>\n    				<input type="date" id="startDate" class="form-control" [(ngModel)]="storage[\'startDate\']">\n    			</div>\n    			<div class="form-group">\n    				<label for="endDate">End</label>\n    				<input type="date" id="endDate" class="form-control" [(ngModel)]="storage[\'endDate\']">\n    			</div>\n    			<button type="submit" class="btn btn-default">Submit</button>\n    		</form>\n    	</div>\n    </div>\n    <div class="row" *ngIf="!hideForms">\n    	<div class="col-lg-12 well">\n    		<form role="form">\n    			<div class="form-group">\n    				<label for="headline">Headline</label>\n    				<input type="text" class="form-control" id="headline" placeholder="Please enter a headline" [(ngModel)]="storage[\'headline\']">\n    			</div>\n    		</form>\n    	</div>\n    </div>\n    <div class="row">\n    	<div class="col-lg-12">\n    		<table class="table table-striped table-bordered table-hover">\n    			<thead>\n    				<tr *ngIf="storage[\'language\'] === \'en\'">\n    					<th>Person</th>\n    					<th>Service</th>\n    					<th>Date</th>\n    					<th>Hours</th>\n    				<tr *ngIf="storage[\'language\'] === \'de\'">\n    					<th>Person</th>\n    					<th>Leistung</th>\n    					<th>Datum</th>\n    					<th>Stunden</th>\n    				</tr>\n    			</thead>\n    			<tfoot>\n    				<tr *ngIf="storage[\'language\'] === \'en\'">\n    					<td colspan="3"><strong>Total</strong></td>\n    					<td><strong>{{ totalHours }}</strong></td>\n    				</tr>\n    				<tr *ngIf="storage[\'language\'] === \'de\'">\n    					<td colspan="3"><strong>Gesamt </strong></td>\n    					<td><strong>{{ totalHours }}</strong></td>\n    				</tr>\n    			</tfoot>\n    			<tbody>\n    				<tr *ngFor="#timeEntry of timeEntries">\n    					<td>{{ timeEntry.userName }}</td>\n    					<td>{{ timeEntry.serviceName }}</td>\n    					<td>{{ timeEntry.date }}</td>\n    					<td>{{ timeEntry.hours }}</td>\n    				</tr>\n    			</tbody>\n    		</table>\n    	</div>\n    </div>\n    <footer>\n    	<div id="main_footer" *ngIf="!hideButtons">created by <a href="https://bjoernkw.com" title="Björn Wilmsmann IT Services">Björn Wilmsmann IT Services</a>, {{ currentYear }}.</div>\n    </footer>\n  ',styles:["\n\n  "]}),g("design:paramtypes",[h.NgZone])],a)}();return b.HomeCmp=i,d.define=e,c.exports}),System.registerDynamic("services/name_list",[],!0,function(a,b,c){var d=this,e=d.define;d.define=void 0;var f=function(){function a(){this.names=["Dijkstra","Knuth","Turing","Hopper"]}return a.prototype.get=function(){return this.names},a.prototype.add=function(a){this.names.push(a)},a}();return b.NameList=f,d.define=e,c.exports}),System.registerDynamic("components/app/app",["angular2/core","angular2/router","components/home/home","services/name_list"],!0,function(a,b,c){var d=this,e=d.define;d.define=void 0;var f=this&&this.__decorate||function(a,b,c,d){var e,f=arguments.length,g=3>f?b:null===d?d=Object.getOwnPropertyDescriptor(b,c):d;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)g=Reflect.decorate(a,b,c,d);else for(var h=a.length-1;h>=0;h--)(e=a[h])&&(g=(3>f?e(g):f>3?e(b,c,g):e(b,c))||g);return f>3&&g&&Object.defineProperty(b,c,g),g},g=this&&this.__metadata||function(a,b){return"object"==typeof Reflect&&"function"==typeof Reflect.metadata?Reflect.metadata(a,b):void 0},h=a("angular2/core"),i=a("angular2/router"),j=a("components/home/home"),k=a("services/name_list"),l=function(){function a(){}return a=f([h.Component({selector:"app",viewProviders:[k.NameList],template:'\n    <section>\n      <div class="container">\n      	<router-outlet></router-outlet>\n      </div>\n    </section>\n  ',styles:["\n\n  "],encapsulation:h.ViewEncapsulation.None,directives:[i.ROUTER_DIRECTIVES]}),i.RouteConfig([{path:"/",component:j.HomeCmp,as:"Home"}]),g("design:paramtypes",[])],a)}();return b.AppCmp=l,d.define=e,c.exports}),System.registerDynamic("bootstrap",["angular2/core","angular2/platform/browser","angular2/router","components/app/app"],!0,function(a,b,c){var d=this,e=d.define;d.define=void 0;var f=a("angular2/core"),g=a("angular2/platform/browser"),h=a("angular2/router"),i=a("components/app/app");return g.bootstrap(i.AppCmp,[h.ROUTER_PROVIDERS,f.provide(h.LocationStrategy,{useClass:h.HashLocationStrategy})]),d.define=e,c.exports});
//# sourceMappingURL=app.js.map